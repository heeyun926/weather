{"ast":null,"code":"import { useCallbackRef as e } from \"@radix-ui/react-use-callback-ref\";\nimport * as t from \"react\";\nexport function useEscapeKeydown(n) {\n  const o = e(n);\n  t.useEffect(() => {\n    const e = e => {\n      \"Escape\" === e.key && o(e);\n    };\n    return document.addEventListener(\"keydown\", e), () => document.removeEventListener(\"keydown\", e);\n  }, [o]);\n}","map":{"version":3,"mappings":";;OAMA,SAASA,iBAAiBC;EACxB,MAAMC,IAAkBC,EAAeF;EAEvCG,EAAMC,UAAU;IACd,MAAMC,IAAiBC;MACH,aAAdA,EAAMC,OACRN,EAAgBK;IAAAA;IAIpB,OADAE,SAASC,iBAAiB,WAAWJ,IAC9B,MAAMG,SAASE,oBAAoB,WAAWL;EAAAA,GACpD,CAACJ;AAAAA","names":["useEscapeKeydown","onEscapeKeyDownProp","onEscapeKeyDown","useCallbackRef","React","useEffect","handleKeyDown","event","key","document","addEventListener","removeEventListener"],"sources":["/Users/guheeyun/Desktop/weather/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/useEscapeKeydown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(onEscapeKeyDownProp?: (event: KeyboardEvent) => void) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown]);\n}\n\nexport { useEscapeKeydown };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}